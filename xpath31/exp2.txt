/
//@*
//*
/..
.
./*
..
../..
''
'+'
@*
@*/.
*
*|@*
0 = -0
0 > -0
0000000000
-.0000000000000000000000000000000000000000123456789
.0000000000000000000000000000000000000000123456789
-.000000000000000000000000000000000000000123456789
.000000000000000000000000000000000000000123456789
-.00000000000000000000000000000000000000123456789
.00000000000000000000000000000000000000123456789
-.0000000000000000000000000000000000000123456789
.0000000000000000000000000000000000000123456789
-.000000000000000000000000000000000000123456789
.000000000000000000000000000000000000123456789
-.00000000000000000000000000000000000123456789
.00000000000000000000000000000000000123456789
-.0000000000000000000000000000000000123456789
.0000000000000000000000000000000000123456789
-.000000000000000000000000000000000123456789
.000000000000000000000000000000000123456789
-.00000000000000000000000000000000123456789
.00000000000000000000000000000000123456789
-.0000000000000000000000000000000123456789
.0000000000000000000000000000000123456789
-.000000000000000000000000000000123456789
.000000000000000000000000000000123456789
-.00000000000000000000000000000123456789
.00000000000000000000000000000123456789
-.0000000000000000000000000000123456789
.0000000000000000000000000000123456789
-.000000000000000000000000000123456789
.000000000000000000000000000123456789
-.00000000000000000000000000123456789
.00000000000000000000000000123456789
-.0000000000000000000000000123456789
.0000000000000000000000000123456789
-.000000000000000000000000123456789
.000000000000000000000000123456789
-.00000000000000000000000123456789
.00000000000000000000000123456789
-.0000000000000000000000123456789
.0000000000000000000000123456789
-.000000000000000000000123456789
.000000000000000000000123456789
-.00000000000000000000123456789
.00000000000000000000123456789
-.0000000000000000000123456789
.0000000000000000000123456789
-.000000000000000000123456789
.000000000000000000123456789
-.00000000000000000123456789
.00000000000000000123456789
-.0000000000000000123456789
.0000000000000000123456789
-.000000000000000123456789
.000000000000000123456789
-.00000000000000123456789
.00000000000000123456789
-.0000000000000123456789
.0000000000000123456789
-.000000000000123456789
.000000000000123456789
-.00000000000123456789
.00000000000123456789
-.0000000000123456789
.0000000000123456789
-.000000000123456789
.000000000123456789
-.00000000123456789
.00000000123456789
-.0000000123456789
.0000000123456789
-.000000123456789
.000000123456789
-.00000123456789
.00000123456789
-.0000123456789
.0000123456789
-.000123456789
.000123456789
'001' = 1
-.00123456789
.00123456789
-.01
.01
-.012
.012
-.0123
.0123
-.01234
.01234
-.012345
.012345
-.0123456
.0123456
-.01234567
.01234567
-.012345678
.012345678
-.0123456789
.0123456789
0 div 0
0 div 0 >= 0
0 div 0 < 0
0=false()
0 or ''
'0'=true()
1
-1
-.1
.1
*[1]
10
1 = '001'
100-9-7-4-17-18-5
100-n6 -4-n1 -1-11
-.10123456789
.10123456789
-.101234567892
.101234567892
-.1012345678923
.1012345678923
-.10123456789234
.10123456789234
-.101234567892345
.101234567892345
-.1012345678923456
.1012345678923456
-.10123456789234567
.10123456789234567
-.101234567892345678
.101234567892345678
-.1012345678923456789
.1012345678923456789
-.10123456789234567893
.10123456789234567893
10+5+25+20+15+50+35+40
10+7
1=1
1>1
1!=1
1 = 1.00
1 != 1.00
12
-12
1=2
1>2
1>=2
1-2
1!=2
123
-123
1234
-1234
12345
-12345
123456
-123456
1234567
-1234567
12345678
-12345678
123456789
-123456789
-.123456789
.123456789
1234567890
-1234567890
12345678901
-12345678901
123456789012
-123456789012
1234567890123
-1234567890123
12345678901234
-12345678901234
123456789012345
-123456789012345
1234567890123456
-1234567890123456
12345678901234567
-12345678901234567
123456789012345678
-123456789012345678
1<1
1<=1
1<2
1<=2
16-div
1.9999999 < 2
1.9999999 < 2.0
'1' and '0'
1 div -0 = 1 div 0
1 div -0 = 2 div -0
2
@*[2]
20
'200'
2.0000001 < 2.0
'2'>'1'
2>1
2>=1
2>=2
2*3
(24 div 3 +2) div (40 div 8 -3)
25-*
256
2<1
2<=1
2 div number('xxx')
2 < 2.0
2 mod number('xxx')
2+n5+7+n3
(2 + number('xxx'))
2 - number('xxx')
2 * -number('xxx')
3
* +3
*[3]
3-1
32
3*2+5*4-4*2-1
3+6
4
(* - 4)**
*[4]
48 mod 17 - 2 mod 9 + 13 mod 5
(* - 4) div 2
5
'....5....|'
@*-5
5.*.
5.+*
54 div*
555
56 mod round(n5*2+1.444) - n6 mod 4 + 7 mod n4
5 mod 2
(5 mod 2 = 1) and (5 mod -2 = 1) and (-5 mod 2 = -1) and (-5 mod -2 = -1)
6
.+6
60
' 6 '*div
' 6 ' div 2
6 div 2
6 div -2
7
-7 --3
7 - -3
7+-3
8
80 div n2 + 12 div 2 - n4 div n2
9
9876543210
-9.87654321012345
-98.7654321012345
-987.654321012345
-9876.54321012345
-98765.4321012345
-987654.321012345
-9876543.21012345
-98765432.1012345
-987654321.012345
-9876543210.12345
-98765432101.2345
-987654321012.345
-9876543210123.45
-98765432101234.5
9.87654321012345
98.7654321012345
987.654321012345
9876.54321012345
98765.4321012345
987654.321012345
9876543.21012345
98765432.1012345
987654321.012345
9876543210.12345
98765432101.2345
987654321012.345
9876543210123.45
98765432101234.5
a
.//a
A
a[0]
a[0 < true()]
a[1]
a[3]
a[3.0='3.0']
a[3-2]
a['3.5' < 4]
a[3=following-sibling::*]
a[4]
a[*=9]
a=b
../../a/b[1]
'ABC'
'abcdæfgh'
'abcdèfgh'
'ace' != 'abc'
'ace' != 'ace'
a/child::comment()[last()]
a/child::*[last()]
a/child::node()[last()]
a/child::text()[last()]
a/comment()
a/descendant::*[last()]
a[descendant::*='target']
a[descendant::*!='target']
a[div=9]
a[false()!=following-sibling::*]
affiliation
a[following-sibling::*=3]
a[following-sibling::*=descendant::*]
a[following-sibling::*!=false()]
a[following-sibling::*=true()]
a/*[last()]
alpha
alternate/name/first
alternate/name/last
//ancestor::*
'ancestor::*'
@*/ancestor::*
ancestor::*
ancestor::*[3]
ancestor::*[count(child::*) > 1]/*[not(. = current()/ancestor-or-self::*)]
(((ancestor::foo)[1])/@att1)
((ancestor::foo))[1]/@att1
(ancestor::foo)[1]/@att1
(ancestor::foo[1])/@att1
ancestor::foo[1]/@att1
@*/ancestor::*/near-north/*[4]/@*/following::node()
@*/ancestor::*/near-north/*[4]/@*/preceding::*
@*/ancestor::*/near-north/*[4]/@*/preceding::comment()
@*/ancestor::*/near-north/*[4]/@*/preceding::node()
@*/ancestor::*/near-north/*[4]/@*/preceding::processing-instruction()
@*/ancestor::*/near-north/*[4]/@*/preceding::text()
ancestor::node()
'ancestor-or-self::*'
@*/ancestor-or-self::*
ancestor-or-self::*
ancestor-or-self::*[1]
ancestor-or-self::*[1]/text()
ancestor-or-self::*[2]/text()
ancestor-or-self::*[3]/text()
ancestor-or-self::*[4]/text()
ancestor-or-self::*[5]/text()
ancestor-or-self::*[6]/text()
ancestor-or-self::*[7]/text()
(ancestor-or-self::*)[@att1][1]/@att1
ancestor-or-self::*[@att1][1]/@att1
(ancestor-or-self::*/@att1)[last()]
(ancestor-or-self::*)/@att1[last()]
ancestor-or-self::*/@att1[last()]
ancestor-or-self::node()
ancestor-or-self::sub | ancestor-or-self::sub-sub
ancestor-or-self::*[@xml:lang]/@xml:lang
((ancestor::*|self::*)/@att1)[last()]
(ancestor::*|self::*)/@att1[last()]
ancestor::sub1|ancestor::sub2
a[not(@*)]
a[not(('target'=descendant::*) or @squish)]
a[number('3')]
a[position()=1]
a[position()>=2]
a[position()>2]
a[position()!=2]
a[position()=3]
a[position()=4]
a[position()=$first]
a[position() <=3]
a[position()<3]
'Apply-templates'
a-set
a-set/a/text()
a[(@squeesh or @squish) and @squash]
a[@squeesh or (@squish and @squash)]
a[@squeesh or @squish and @squash]
a['target'=descendant::*]
a['target'!=descendant::*]
a[('target'=descendant::*) or @squish]
./a/text()
a/text()
a[$third]
a[true()=4]
a[true()=following-sibling::*]
a[true()='stringwithchars']
@att1
@attr
attribute :: *
attribute::*
@attribute1
attribute::*[2]
attribute::center-attr-2
attribute :: div
attribute*(div - 4)
av//*
av//h
av//j
avj/bool/*
avj/good/*
avj//k
avj/none
a/x
b
//b
'b'
bar
bar[@a='1' and @b='1']
bar[(@a='1' and @b='1') or (@c='1' and @d='1')]
bar[@a='1' and (@b='1' or @c='1') and @d='1']
bar[@a='1' and @b='1' or @c='1' and @d='1']
bar[(@a='1' or @b='1') and @c='1']
bar[(@a='1' or @b='1') and (@c='1' or @d='1')]
bar[@a='1' or (@b='1' and @c='1') or @d='1']
bar[@a='1' or @b='1' and @c='1' or @d='1']
bar[@a='1' or @b='1' or @c='1']
base//description
'baseParam1Data'
'baseSubParam0Data'
//baz
b/c
birthday
body
bonus
boolean('')
boolean(-0)
boolean('0')
boolean(0)
boolean(0 div 0)
boolean('1')
boolean(1)
boolean(1 div 0)
boolean(doc)
boolean(foo)
'bug'
c
'Call-template'
c/b
ceiling(0.0)
ceiling(1)=1
ceiling(1.1)=2
ceiling(-1.5)=-1
ceiling(1.54)
ceiling(2.999999)
ceiling(n0)
ceiling(n1)
ceiling(n2)
ceiling(number('xxx'))
//center
.//center
center//*
@center-attr-2
//center/@center-attr-1
//center/@center-attr-3
center//child::*
center/child::*
//center/comment()
//center/comment()[1]
center//descendant::*
center/descendant::*
//center//processing-instruction('b-pi')
//center/text()[1]
chapter
chapter/descendant::footnote[6]
chapter//footnote[1]
(chapter//footnote)[2]
chapter//footnote[2]
chapter/note
child
//child
'child::*'
@*/child::*
child::*
Child
//child1
child1[child::child2]
child::*[2]
(child::chapter/descendant-or-self::node())/footnote[2]
child::*/child::*
child::*/descendant::*
child::near-south-west
child::node()
child :: sub
child::sub
chooser
CLASSIFICATION
//comment()
.//comment()
./comment()
comment ()
comment()
@*|comment()|processing-instruction()|text()|*
*|@*|comment()|processing-instruction()|text()
*|@*|comment()|text()
concat("a","b","c","d","ef")
concat("bc", string(23))
concat("cd", 34)
concat("cd", "34")
concat(a, 34)
concat(a, b)
concat(a, b, c, d, e)
concat(/*, /*[@attr='whatsup'])
concat(false(),'ly')
concat(left,right,orig)
concat(team[1]/@score, '-', team[2]/@score)
concat(team[1], ' versus ', team[2])
'condition false'
'condition true'
contains('','')
contains(., '&')
contains('ab', 'abc')
contains('abc', '')
contains('abc', 'bc')
contains('abc', 'bcd')
contains(concat(.,'BC'),concat('A','B','C'))
contains(., '°')
contains(doc/@attr, 'amwi')
contains(doc/@attr, 'TEST')
contains(doc, 'CYCL')
contains(doc, 'TEST')
contains('ENCYCLOPEDIA', 'CYCL')
contains('ENCYCLOPEDIA', 'TEST')
contains('foo','o')
contains(main,sub)
contains('true()', 'e')
'correct'
count(//@*)
count(.//@*)
count(*)
count(a/@*)
count(a/attribute::*)
count(a/comment())
count(a[@ex=''])
count(a[@ex!=''])
count(a[@ex])
count(alpha/*[last()][name()='z'])
//*[count(ancestor::*) >= 2]/../parent::*
count(ancestor-or-self::*/@att1)
count(ancestor-or-self::node())
count(a[not(@ex='')])
count(a[not(@ex)])
count(a[not(string-length(@ex)=0)])
count(a-set/a/text())
count(a[string-length(@ex)=0])
count(a[string-length(@ex) > 0])
count(a/text())
count(a[@why='value'])
count(a[@why!='value'])
count(.//comment())
count(descendant::*)
count(descendant-or-self::*)
count(descendant-or-self::*/@att1)
count(descendant-or-self::*/namespace::*)
count(div)
count(/doc/alpha[last()]/h)
count(/doc/chapter/note)
count(following::node()|following::*/@*)
count(following-sibling::*)
//*[count(./*/*) > 0]
count(id('c'))
count(id('d b c k'))
count(id('k'))
count(namespace::*[name(.)!='xml'])
count(preceding::text())
count(//section//@*)
count(section[1]//@*)
count(section[1]//@title)
count(section[2]//@*)
count(section[2]//@title)
count(section[3]//@*)
count(section[3]//@title)
count(//section//@title)
count(//@title)
count(.//@title)
count(//tr)
count(//tr[count(./td) = 3])
count(*/z[2])
critter
customers/customer
//c/@x
'CY'
d
dat
'Data'
/data/*/datum/@value
/data/point
date
day
'default'
/descendant::*
'descendant::*'
descendant::*
descendant::*[3]
descendant::*/child::*
descendant::child1|descendant::child2
descendant::far-south
@*/descendant::node()
'descendant-or-self::*'
descendant-or-self::*
descendant-or-self::*[3]
(descendant-or-self::*/@att1)[last()]
descendant-or-self::*/@att1[last()]
descendant-or-self::center
descendant-or-self::far-south
descendant-or-self::*[last()]/@att1
@*/descendant-or-self::node()
descendant-or-self::sub1|descendant-or-self::sub2
descendant::*[string-length(name(.))=1]
'descending'
dis
display
div +3
@div -5
@div - 5
@div-5
div/@attrib div mod/@attrib
div/@attrib mod mod/@attrib
div div mod
div mod mod
div/para[lang('en')]
doc
doc/@*
doc/*
doc1
/doc/a
doc/a
doc//a3[../@pick='yes']
/doc/a/b/@attr
doc/alpha
doc/a//text()
doc/av
doc/av//*
/doc/avj
/doc/b
/doc/b/bb/bbb
doc/body/para
doc/c/d/e
doc/comment()
/doc/critter[@type='cat']
/doc/datum/@value
doc/element1[2]/child1[last()]
/doc/foo
doc/foo
doc/memo
/doc/mid/inner
/doc/north
/doc/num
doc/num
doc/OL//tag
doc/p
doc//Q
/docs/a
docs/a/node()
docs//d
docs//d/text()
/doc/str
/doc/*[@test='true']
'duh'
e
element
'en'
'error'
'error1!'
'error2!'
'error3!'
'error4!'
'error5!'
'error6!'
expense-report/total
.//f
fa
'fallback'
false()
false()=''
false()=0
false() and 1 div 0
false() and false()
false() and true()
false()!=false()
false() or false()
false() or true()
false()!=true()
fa/../mi | Aflat/natural/la | Csharp//* | /doc/do | *//ti
/far-north/north/near-north/center/ancestor-or-self::*
file
'first'
@flag
floor(0.0)
floor(1)=1
floor(-1.5)
floor(-1.5)=-2
floor(1.9)
floor(1.9)=1
floor(2.999999)
floor(n0)
floor(n1)
floor(n2)
floor(number('xxx'))
'following::*'
@*/following::*
following::*
following::*[4]
following::*[4]/../*[2]
@*/following::comment()
following::out-yonder-east
@*/following::processing-instruction()
'following-sibling::*'
@*/following-sibling::*
following-sibling::*
following-sibling::*[1]
following-sibling::*[2]
following-sibling::*[2]/preceding-sibling::*
following-sibling::*[2]/preceding-sibling::*[4]
following-sibling::*[2]/preceding-sibling::*[4]/following-sibling::*[5]/preceding-sibling::*[4]/preceding-sibling::*[2]
following-sibling::ch[current()]
(following-sibling::ch[current()])[1]
following-sibling::*[count(current())]
following-sibling::east
following-sibling::node()
following-sibling::*/preceding-sibling::*
@*/following::text()
foo
..//foo
FOO
'foo' and 'fop'
foo/a/num/@val
foo[(bar[2][(baz[2])='goodbye'])]
foo[(bar[2])='this']
foo/@test
/foo/*/test/text()
'Gadzookz'
'global'
grandchild
/*/@group
@group
growth
@height*@width
'H' != '  H'
'H' != 'H  '
human
@h | @w
./@id
../@id
@id
id('c a d')
id('c')/@id
id('d b c')
id('id0')/a/b
id('id0')/c/c/a
id('id10')/a
id('id13')
id('id2')/a | id('id5') | id('id15')/a
id('id4')
id('id8')/b/b
id('id9')
id(main/b)
id(main/@list)
id('nomatch')/@id
//inc/node4
'incorrect'
'In Import: Testing '
'In Include: Testing '
inner
//inner/following::node()
//inner/preceding::node()
item
item[1][last()]
item[last()]
item[last()-1]
item[last()-1][1]
item[last()-1][last()]
item[last()][last()]
item[$n]
item[$n1]
item[$n2]
item[$n3]
item[$n4]
item[$n5]
item[$n6]
item[$n7]
item[$n8]
item[$n9]
item[position()=$n]
//item[@type=current()/@name]
j[@l='12'] = j[@l='17']
j[@l='12'] != j[@l='17']
j[@l='12'] = j[@w='33']
j[@l='12'] != j[@w='33']
j[@l='12'] = j[@w='45']
j[@l='12'] != j[@w='45']
j[@l='16'] != j[@w='78']
@key
keyword[@tag='sector']
keyword[@tag='ticker']
*//la | //Bflat | re
lang('en')
*[last()]
last-bad
*[last()=position()]
'left'
letter
@level
'level0'
'level1'
'level3'
//Level3
link
'local'
local-name(.)
local-name()
local-name(a/@at1)
*[local-name()='bar']
local-name(namespace::*[1])
local-name(namespace::*[name(.)!='xml'])
local-name(namespace::*[string()='http://www.w3.org/1999/XMLSchema-instance'])
local-name(namespace::*[string()='test'])
'lower-first'
m
main/a/descendant-or-self::*/@*
main/size[@for='d']
'main stylesheet, should have highest precedence'
mark
@mark
//match
'mdocs15a.xml'
member
middle
mi | do | fa | re
miles-earned
mi[@mi2='mi2'] | do | fa/so/@so | fa | mi/@* | re | fa/@fa | do/@do
month
n
n0 div n1 div n2 div n3
n0 div n1 div n2 div n3 div n4
n0 div n1 div n2 div n3 div n4 div n5
n1/@attrib div n2/@attrib
n1/@attrib mod n2/@attrib
(n1/@attrib)*(n2/@attrib)
(n1/@attrib)+(n2/@attrib)
n1/@attrib + n2/@attrib
n1 div n2
n1 mod n2
-(n1|n2)
n1*n2
n1+n2
n1*n2*n3*n4
(n1*n2*n3*n4*n5*n6)div n7 div n8 div n9 div n10
n1*n2*n3*n4*n5*n6*n7*n8*n9*n10
-(n-2/@attrib) - -(n-1/@attrib)
-n-2/@attrib --n-1/@attrib
-n-2 --n-1
n-2 - -n-1
n-2 - n-1
n-2+-n-1
((((((n3+5)*(3)+(((n2)+2)*(n1 - 6)))-(n4 - n2))+(-(4-6)))))
n4
n6*5-8*n2+5*2
name
./@name
@name
name(..)
name(.)
name()
name(*)
./Name
name(a/@at1)
name(ancestor::*[1])
name(ancestor::*[2])
name(ancestor::*[3])
name(/descendant::near-north)
name(descendant::near-north/descendant::far-west)
name(descendant::near-north/descendant::far-west/descendant-or-self::far-west)
name(/descendant::near-north/descendant-or-self::near-north)
name(descendant::near-north/descendant-or-self::near-north)
name(descendant::near-north/descendant-or-self::near-north/child::far-west)
name(descendant::near-north/descendant-or-self::near-north/descendant-or-self::near-north)
name(descendant::node()/descendant::far-west)
name(descendant::node()/descendant::node()/descendant-or-self::far-west)
name(/descendant::node()/descendant-or-self::near-north)
name(descendant::node()/descendant-or-self::near-north)
name(descendant::node()/descendant-or-self::node()/child::far-west)
name(descendant::node()/descendant-or-self::node()/descendant-or-self::near-north)
name(/descendant-or-self::node()/child::near-north)
name(descendant-or-self::node()/child::near-north)
name(descendant-or-self::node()/child::node()/child::far-west)
name(descendant-or-self::node()/child::node()/descendant-or-self::near-north)
name(descendant-or-self::node()/descendant::near-north)
name(descendant-or-self::node()/descendant::node()/child::far-west)
name(descendant-or-self::node()/descendant::node()/descendant-or-self::near-north)
name(descendant-or-self::node()/descendant-or-self::node()/child::near-north)
name(descendant-or-self::node()/descendant-or-self::node()/descendant-or-self::north)
name(/descendant-or-self::node()/descendant-or-self::north)
name(descendant-or-self::node()/descendant-or-self::north)
name(/descendant-or-self::north)
name(/descendant-or-self::north/child::near-north)
name(descendant-or-self::north/child::near-north)
name(descendant-or-self::north/child::near-north/child::far-west)
name(descendant-or-self::north/child::near-north/descendant-or-self::near-north)
name(descendant-or-self::north/descendant::near-north)
name(descendant-or-self::north/descendant::near-north/child::far-west)
name(descendant-or-self::north/descendant::near-north/descendant-or-self::near-north)
name(/descendant-or-self::north/descendant-or-self::north)
name(descendant-or-self::north/descendant-or-self::north)
name(descendant-or-self::north/descendant-or-self::north/child::near-north)
name(descendant-or-self::north/descendant-or-self::north/descendant-or-self::north)
name/first
Name/@First
name(following::*[last()])
name(following-sibling::*[last()])
name/last
name/last | primary/name/last
name(namespace::*[1])
name(namespace::*[name(.)!='xml'])
./*[name(.) = 'never']
name(preceding::*[last()])
name(preceding-sibling::*[last()])
name(self::node()/descendant::near-north)
name(self::node()/descendant::near-north/child::far-west)
name(self::node()/descendant::near-north/descendant-or-self::far-west)
name(self::node()/descendant::node()/child::far-west)
name(self::node()/descendant::node()/descendant-or-self::far-west)
name(self::node()/descendant-or-self::node()/child::near-north)
name(self::node()/descendant-or-self::node()/descendant-or-self::north)
name(self::node()/descendant-or-self::north)
name(self::node()/descendant-or-self::north/child::near-north)
name(self::node()/descendant-or-self::north/descendant-or-self::north)
namespace::*
namespace::* | attribute::*
namespace::bdd
namespace::node()
namespace::ped
namespace-uri(.)
namespace-uri()
namespace-uri(*)
namespace-uri(a/@at1)
namespace-uri(bogus)
namespace-uri(namespace::*[name(.)!='xml'])
namespace-uri(namespace::*[string()='http://www.w3.org/1999/XMLSchema-instance'])
namespace-uri(namespace::*[string()='test'])
namespace-uri(x)
//near-north
.//near-south/preceding-sibling::*|following-sibling::east/ancestor-or-self::*[2]
@net
node
../node()
@*|node()
node()
node()|@*
@*|node()|comment()|processing-instruction()
@*|node()|text()
normalize-space(.)
normalize-space()
normalize-space(a)
normalize-space(text())
normalize-space(url)
north/dup2 | north/dup1 | north/*
//north/dup2 | south/preceding-sibling::*[4]/* | north/dup1 | north/*
north/* | north/dup1 | north/dup2
not('')
not('0')
note
note[1]
not(false())
not(false() = false())
*[not(@test)][last()]
*[not(@test)][last()=position()]
not(true())
not(true() = false())
num
@num
'number'
number('')
number()
number(0.0001 * 4)
number(0.109375 * 16)
number(1.75)
(number(1.75) = (0.109375 * 16))
(number(1.75) = (7 div 4))
number(2)
number('3')
number(4 div 10000)
number(7 div 4)
number('abc')
number(false())=0
number(foo)
number(k)
(number(k) = (0.0001 * 4))
(number(k) = (4 div 10000))
number(n1)
number(string(1.0))=1
number(true())=1
number('xxx')=0
number('xxx') - 10
number('xxx') div 3
number('xxx') mod 3
number('xxx')=number('xxx')
'okay'
OL
//OL
ol/item
OL/OL/LI
//OL[@real='yes']
OL//tag
order
@ordering
p
*/p
/page/contents/avail/hotel
/para/font[@color='green']
para[@id='1' and lang('en')]
para[@id='3' and lang('en')]
para[@id='4' and lang('en')]
//para[lang('en')]
'parent::*'
@*/parent::*
parent::*
parent::*[1]
parent::foo
parent::near-north
parent::node()
person
@person
Personal_Information/Age
@pos
pos-bad
*[position()=1]
*[position()=3]
*[position()=4]
'preceding::*'
@*/preceding::*
preceding::*
preceding::*[2]/../descendant::*[10]/following-sibling::east
preceding::*[2]/../following::*
preceding::*[4]
(preceding::foo)[1]/@att1
preceding::foo[1]/@att1
preceding::out-yonder-west
'preceding-sibling::*'
preceding-sibling::*
preceding-sibling::*[2]
preceding-sibling::*[2]/following-sibling::*
preceding-sibling::*[2]/following-sibling::*[4]
preceding-sibling::*[2]/following-sibling::*[4]/preceding-sibling::*[5]/following-sibling::*[4]/following-sibling::*[2]
preceding-sibling::child1|//child3
preceding-sibling::child1|following-sibling::child3
preceding-sibling::*|following-sibling::*
preceding-sibling::*/following-sibling::*
(preceding-sibling::*|following-sibling::*)/ancestor::*[last()]/*[last()]
(preceding-sibling::foo)[1]/@att1
preceding-sibling::foo[1]/@att1
@*/preceding-sibling::node()
preceding-sibling::west
preceding::text()
preceding::text()[$this]
primary/name/first
primary/name/last
//processing-instruction()
./processing-instruction('*')
./processing-instruction()
processing-instruction()
./processing-instruction()[2]
./processing-instruction('a-pi')
//processing-instruction('b-pi')
'pvar1 default data'
'pvar2 default data'
'"eos'
r
'red'
@repeat
/report/month
revenue
'root'
/root/base
root/x
round(0.0)
round(-1.1)=-1
round(1.1)=1
round(1.24)
round(-1.5)
round(1.5)=2
round(-1.9)=-2
round(1.9)=2
round(2.5)
round(-2.5)=-2
round(2.999999)
round(n0)
round(n1)
round(n2)
round(number('xxx'))
row
@s
sales/division
//section/title
(section//@title)[7]
self::*
self::*[1]
self::center
self::*[@center-attr-2]
self::comment()
self::foo
self::*[near-south]
@*/self::node()
self::node()
self::node()|child::*
self::processing-instruction()
self::text()
@seq
'set in var29side, should have highest precedence'
'should be wrapped'
side
@side
@size
.//*[@so]
@spot
Spr/State[. = 'Open']
sss//i
sss/sss
/sss/sss/i
starts-with('','')
starts-with('ab', 'abc')
starts-with('abc', '')
starts-with('abc', 'bc')
starts-with(doc/@attr, 'slam')
starts-with(doc/@attr, 'wich')
starts-with(doc, 'ENCY')
starts-with(doc, 'test')
starts-with('ENCYCLOPEDIA', 'en')
starts-with('ENCYCLOPEDIA', 'EN')
starts-with('ENCYCLOPEDIA', 'ENCY')
*[starts-with(name(.),'f')]
starts-with('true()', 'tr')
@state
'string'
string('')
string()
string(0)
string(-1 * number(.))
string(2)
string(av//*)
string(doc)
string(foo)
string('!From m!')
string('!From n!')
string('!From o!')
string('!From p!')
string('!From ss2!')
string('!From ss3!')
string('!From ss4!')
string('!From ss5!')
string-length ()
string-length(.)
string-length()
string-length(doc)
string-length(doc/a)
string-length(normalize-space(.))
string-length('This is a test')
string(number(.))
string('test')
'stylesheet-var'
subj
'subsheet, should be overridden by main sheet'
substring('1999/04/01', 1, 0)
substring('1999/04/01', 1, 4)
substring('abcdefghi',2,4)
substring('abcdefghijk',0 div 0, 5)
substring('abcdefghijk',4, 6)
substring-after(.,'-')
substring-after('1999/04/01', '/')
substring-after('1999/04/01', '1')
substring-after('abcdefghijk','l')
substring-after(doc, '/')
substring-after(doc/@attr, 'd')
substring-after(doc/@attr, 'D')
substring-after(doc/@attr, 'z')
substring-after('ENCYCLOPEDIA', '/')
substring-after('ENCYCLOPEDIA', 'C')
substring-after(foo, '/')
substring-before('1999/04/01', '/')
substring-before('a','z')
substring-before(doc, '/')
substring-before(doc/@attr, 'd')
substring-before(doc/@attr, 'D')
substring-before(doc/@attr, 'z')
substring-before('ENCYCLOPEDIA', '/')
substring-before('ENCYCLOPEDIA', 'c')
substring-before('ENCYCLOPEDIA', 'C')
substring-before(foo, '/')
substring(doc, 1, 4)
substring(doc/@attr, 1, 3)
substring(doc/@attr, 2.5, 3.6)
substring(doc/@attr, 4)
substring('ENCYCLOPEDIA', 8)
substring('ENCYCLOPEDIA', 8, 3)
substring(foo, 2, 2)
substring(@key,2,1)
substring('x',2,1)
sum(a-set/a)
sum(e)
sum(n)
sum(n/@attrib)
sum(x)
t
'TableofContents'
td
team[1]
team[2]
tee/s
'templ'
'test'
@test
*[@test][1]/num
*[@test][3]/num
*[@test][4]/num
//Test/@a
*[@test and position()=1]
*[@test and position()=4]
*[@test and position()=7]
*[@test and position()=8]
//Test/@b
testfile.html
'Testing '
*[@test][position()=1]/num
*[@test][position()=3]/num
*[@test][position()=4]/num
*[@test='true']
'test value set in final'
'test value set in impfinal'
'test value set in impmid'
'test value set in mid'
'test value set in var27side'
//text()
.//text()
./text()
..//text()
' #text'
text()
text()[1]
text()[3]
./@theattrib
'the same'
'this'
time
'titi'
title
//title
.//title
@title
'Tommy'
'top'
town[generate-id() = generate-id(key('places',@state)[1])]
translate("BAR","abc","ABC")
translate("BAR","Rab","TxX")
translate("bar","RAB","xyz")
translate("ddaaadddd","abcd","ABCxy")
translate("zzaaazzz","abcz","ABC")
translate(a,"abc","ABC")
translate(a/@attrib,"lo","IT")
translate(.,'abcdefghijklmnopqrstuvwxyz','ABCDEFGHIJKLMNOPQRSTUVWXYZ')
translate(b,"ABC","abc")
translate(b/@attrib,"lo","it")
translate(b/@attrib,"LO","it")
//tr[count(./td) = 3]
true()
true()='0'
true()=2
true() and false()
true() and true()
true()!=false()
true() or 1 div 0
true() or false()
true() or true()
'US'
@val
@value
'value set in var30mid, should have highest precedence'
../@width
@width
width * depth
'Wizard'
//@x
//X
' x 4'
'Xalan_URL_found'
@xml:att1
@xx
//xx/descendant::*
@x|@z
@z
z[1]
zoneone
'z w x'